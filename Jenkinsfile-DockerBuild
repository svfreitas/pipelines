pipeline {
 agent {
    kubernetes {
      cloud 'k8s-devopsbox'
      defaultContainer 'maven' 
      namespace 'devopsbox'
      yaml """\
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            devopsbox: maven
        spec:
          containers:
          - name: maven
            image:  maven:3.6.3-jdk-8
            command:
            - cat
            tty: true
          - name: builder
            image: gcr.io/kaniko-project/executor:debug
            imagePullPolicy: Always
            command:
            - /busybox/cat
            tty: true
            volumeMounts:
            - name: kaniko-secret
              mountPath: /kaniko/.docker
          volumes:
          - name: kaniko-secret
            env:
            - name: HTTP_PROXY
              value: http://10.13.11.252:3128
            - name: HTTPS_PROXY
              value: http://10.13.11.252:3128
            - name: NO_PROXY 
              value: svc,local,default       
            - name: http_proxy
              value: http://10.13.11.252:3128
            - name: https_proxy
              value: http://10.13.11.252:3128
            - name: no_proxy 
              value: svc,local,default 
            secret:
                secretName: registry-credentials
                items:
                 - key: .dockerconfigjson
                   path: config.json
        """.stripIndent()
    }
  }
  stages {
        stage("clone sources") {
            steps {
                    git url: 'https://github.com/svfreitas/maven_example.git', branch: 'main'
               }
        }
        stage ("build")
        {
            steps {
                sh "mvn package -DskipTests=true -DproxySet=true -Dhttps.proxyHost=10.13.11.252 -Dhttps.proxyPort=3128"
            }
        } 
        stage('Test') { 
            steps {
                sh 'mvn test -DproxySet=true -Dhttps.proxyHost=10.13.11.252 -Dhttps.proxyPort=3128' 
            }
            post {
                always {
                    junit 'target/surefire-reports/*.xml' 
                }
           }
        }
        stage("publish to nexus") {
            steps {
                sh 'echo "publish to nexus OK"'
            }
        }
        stage('Build Docker Image') {
        steps {
            container('builder') {
            script {
                sh "/kaniko/executor  --dockerfile `pwd`/Dockerfile --context `pwd` --destination=nexus-svc.devopsbox:5000/app:${env.BUILD_ID} --insecure"
            } //container
            }
        } //steps
        } //stage(build)

    }
}
