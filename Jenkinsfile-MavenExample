pipeline {
    agent {
    kubernetes {
      defaultContainer 'maven'  
      yaml """\
        apiVersion: v1
        kind: Pod
        metadata:
          labels:
            devopsbox: maven
        spec:
          containers:
          - name: maven
            image:  maven:3.6.3-jdk-8
            command:
            - cat
            tty: true
        """.stripIndent()
        }
    }
 
    stages {
        stage("clone sources") {
            steps {
                    git url: 'https://github.com/svfreitas/maven_example.git', branch: 'main'
               }
        }
        stage("teste curl"){
            steps ("curl"){
                sh "curl http://nexus-svc.devopsbox:8081"
            }
        }
    
        stage ("build") {
            steps {
                sh "mvn package  -DskipTests=true -DproxySet=true -Dhttps.proxyHost=10.13.11.252 -Dhttps.proxyPort=3128"
            }
        } 
        stage("teste"){
            steps ("test"){
                sh "mvn test"
            }
        }
                

        stage("publish to nexus") {
            steps {
                script {
                    // Read POM xml file using 'readMavenPom' step , this step 'readMavenPom' is included in: https://plugins.jenkins.io/pipeline-utility-steps
                    pom = readMavenPom file: "pom.xml";
                    // Find built artifact under target folder
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    // Print some info from the artifact found
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    // Extract the path from the File found
                    artifactPath = filesByGlob[0].path;
                    // Assign to a boolean response verifying If the artifact name exists
                    artifactExists = fileExists artifactPath;
                    
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusPublisher nexusInstanceId: 'Nexus-Repo', nexusRepositoryId: 'devopsbox_maven', packages: [[$class: 'MavenPackage', mavenAssetList: [[classifier: '', extension: '', filePath: artifactPath]], mavenCoordinate: [artifactId: pom.artifactId, groupId: pom.groupId, packaging: pom.packaging, version: pom.version]]]
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
    }

}
